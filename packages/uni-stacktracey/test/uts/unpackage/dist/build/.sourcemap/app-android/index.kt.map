{"version":3,"sources":["App.uvue","uni_modules/uni-upgrade-center-app/utils/call-check-version.uts","uni_modules/uni-upgrade-center-app/utils/call-check-version.ts","uni_modules/uni-upgrade-center-app/utils/check-update.uts","uni_modules/uni-upgrade-center-app/utils/check-update.ts","uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup.uvue","uni_modules/uni-upgrade-center-app/utils/utils.uts","uni_modules/uni-upgrade-center-app/utils/utils.ts","pages/index/index.uvue","main.uts","uni_modules/uts-openSchema/utssdk/interface.uts"],"sourcesContent":["<script lang=\"uts\">\n\tlet firstBackTime = 0\n\texport default {\n\t\tonLaunch: function () {\n\t\t\t// uni.hideTabBar()\n\t\t\tconsole.log('App Launch')\n\t\t},\n\t\tonShow: function () {\n\t\t\tconsole.log('App Show')\n\t\t},\n\t\tonHide: function () {\n\t\t\tconsole.log('App Hide')\n\t\t},\n\n\t\tonLastPageBackPress: function () {\n\t\t\tconsole.log('App LastPageBackPress')\n\t\t\tif (firstBackTime == 0) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '再按一次退出应用',\n\t\t\t\t\tposition: 'bottom',\n\t\t\t\t})\n\t\t\t\tfirstBackTime = Date.now()\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfirstBackTime = 0\n\t\t\t\t}, 2000)\n\t\t\t} else if (Date.now() - firstBackTime < 2000) {\n\t\t\t\tfirstBackTime = Date.now()\n\t\t\t\tuni.exit()\n\t\t\t}\n\t\t},\n\n\t\tonExit: function () {\n\t\t\tconsole.log('App Exit')\n\t\t},\n    onError(err) {\n\n      // console.log('_UNI_ERR_', (err as any).stacktrace)\n\n      console.log('_UNI_ERR_', JSON.stringify((err as Error)))\n    }\n\t}\n</script>\n\n<style>\n\t/*每个页面公共css */\n\t.uni-row {\n\t\tflex-direction: row;\n\t}\n\n\t.uni-column {\n\t\tflex-direction: column;\n\t}\n</style>","export type StoreListItem = {\n    enable: boolean;\n    id: string;\n    name: string;\n    scheme: string;\n    priority: number; // 优先级\n};\nexport type UniUpgradeCenterResult = {\n    _id: string;\n    appid: string;\n    name: string;\n    title: string;\n    contents: string;\n    url: string; // 安装包下载地址\n    platform: Array<string>; // Array<'Android' | 'iOS'>\n    version: string; // 版本号 1.0.0\n    uni_platform: string; // \"android\" | \"ios\" // 版本号 1.0.0\n    stable_publish: boolean; // 是否是稳定版\n    is_mandatory: boolean; // 是否强制更新\n    is_silently: boolean | null; // 是否静默更新\n    create_env: string; // \"upgrade-center\"\n    create_date: number;\n    message: string;\n    code: number;\n    type: string; // \"native_app\" | \"wgt\"\n    store_list: StoreListItem[] | null;\n    min_uni_version: string | null; // 升级 wgt 的最低 uni-app 版本\n};\nexport default function (): Promise<UniUpgradeCenterResult> {\n    return new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n        const systemInfo = uni.getSystemInfoSync();\n        const appId = systemInfo.appId;\n        const appVersion = systemInfo.appVersion; //systemInfo.appVersion\n        if (typeof appId === 'string' && typeof appVersion === 'string' && appId.length > 0 && appVersion.length > 0) {\n            let data = {\n                action: 'checkVersion',\n                appid: '__TEST__',\n                appVersion: '1.0.0',\n                is_uniapp_x: true,\n                wgtVersion: '0.0.0.0.0.1'\n            } as UTSJSONObject;\n            try {\n                uniCloud.callFunction({\n                    name: 'uni-upgrade-center',\n                    data: data\n                }).then(res => {\n                    const code = res.result['code'];\n                    const codeIsNumber = ['Int', 'Long', 'number'].includes(typeof code);\n                    if (codeIsNumber) {\n                        if ((code as number) == 0) {\n                            reject({\n                                code: res.result['code'],\n                                message: res.result['message']\n                            });\n                        }\n                        else if ((code as number) < 0) {\n                            reject({\n                                code: res.result['code'],\n                                message: res.result['message']\n                            });\n                        }\n                        else {\n                            const result = JSON.parse<UniUpgradeCenterResult>(JSON.stringify(res.result)) as UniUpgradeCenterResult;\n                            resolve(result);\n                        }\n                    }\n                }).catch<void>((err: any | null) => {\n                    const error = err as UniCloudError;\n                    if (error.errMsg == '未匹配到云函数[uni-upgrade-center]')\n                        error.errMsg = '【uni-upgrade-center-app】未配置uni-upgrade-center，无法升级。参考: https://uniapp.dcloud.net.cn/uniCloud/upgrade-center.html';\n                    reject(error.errMsg);\n                });\n            }\n            catch (e: any) {\n                reject(e.message);\n            }\n        }\n        else {\n            reject('invalid appid or appVersion');\n        }\n    });\n}\n//# sourceMappingURL=call-check-version.uts.map","export type StoreListItem = {\n\tenable : boolean\n\tid : string\n\tname : string\n\tscheme : string\n\tpriority : number // 优先级\n}\n\nexport type UniUpgradeCenterResult = {\n\t_id : string\n\tappid : string\n\tname : string\n\ttitle : string\n\tcontents : string\n\turl : string // 安装包下载地址\n\tplatform : Array<string> // Array<'Android' | 'iOS'>\n\tversion : string // 版本号 1.0.0\n\tuni_platform : string // \"android\" | \"ios\" // 版本号 1.0.0\n\tstable_publish : boolean // 是否是稳定版\n\tis_mandatory : boolean // 是否强制更新\n\tis_silently : boolean | null\t// 是否静默更新\n\tcreate_env : string // \"upgrade-center\"\n\tcreate_date : number\n\tmessage : string\n\tcode : number\n\n\ttype : string // \"native_app\" | \"wgt\"\n\tstore_list : StoreListItem[] | null\n\tmin_uni_version : string | null  // 升级 wgt 的最低 uni-app 版本\n}\n\nexport default function () : Promise<UniUpgradeCenterResult> {\n\n\treturn new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n\t\tconst systemInfo = uni.getSystemInfoSync()\n\t\tconst appId = systemInfo.appId\n\t\tconst appVersion = systemInfo.appVersion //systemInfo.appVersion\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tif (typeof appId === 'string' && typeof appVersion === 'string' && appId.length > 0 && appVersion.length > 0) {\n\t\t\tlet data = {\n\t\t\t\taction: 'checkVersion',\n\t\t\t\tappid: '__TEST__',\n\t\t\t\tappVersion: '1.0.0',\n\t\t\t\tis_uniapp_x: true,\n\t\t\t\twgtVersion: '0.0.0.0.0.1'\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tuniCloud.callFunction({\n\t\t\t\t\tname: 'uni-upgrade-center',\n\t\t\t\t\tdata: data\n\t\t\t\t}).then(res => {\n\t\t\t\t\tconst code = res.result['code']\n\t\t\t\t\tconst codeIsNumber = ['Int', 'Long', 'number'].includes(typeof code)\n\t\t\t\t\tif (codeIsNumber) {\n\t\t\t\t\t  if ((code as number) == 0) {\n\t\t\t\t\t    reject({\n\t\t\t\t\t      code: res.result['code'],\n\t\t\t\t\t      message: res.result['message']\n\t\t\t\t\t    })\n\t\t\t\t\t  } else if ((code as number) < 0) {\n\t\t\t\t\t    reject({\n\t\t\t\t\t      code: res.result['code'],\n\t\t\t\t\t      message: res.result['message']\n\t\t\t\t\t    })\n\t\t\t\t\t  } else {\n              const result = JSON.parse<UniUpgradeCenterResult>(JSON.stringify(res.result)) as UniUpgradeCenterResult\n              resolve(result)\n            }\n\t\t\t\t\t}\n\t\t\t\t}).catch<void>((err : any | null) => {\n\t\t\t\t\tconst error = err as UniCloudError\n\t\t\t\t\tif (error.errMsg == '未匹配到云函数[uni-upgrade-center]')\n\t\t\t\t\t\terror.errMsg = '【uni-upgrade-center-app】未配置uni-upgrade-center，无法升级。参考: https://uniapp.dcloud.net.cn/uniCloud/upgrade-center.html'\n\t\t\t\t\treject(error.errMsg)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\treject(e.message)\n\t\t\t}\n\t\t} else {\n\t\t\treject('invalid appid or appVersion')\n\t\t}\n\n\t})\n\n\n\n\n\n\n\n\n}\n","import callCheckVersion, { UniUpgradeCenterResult } from \"./call-check-version\";\nimport { platform_iOS } from './utils';\nimport { openSchema } from '@/uni_modules/uts-openSchema';\n// 推荐再App.vue中使用\nconst PACKAGE_INFO_KEY = '__package_info__';\nexport default function (): Promise<UniUpgradeCenterResult> {\n    return new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n        callCheckVersion().then(async (uniUpgradeCenterResult) => {\n            // NOTE uni-app x 3.96 解构有问题\n            const code = uniUpgradeCenterResult.code;\n            const message = uniUpgradeCenterResult.message;\n            const url = 'https://app-cdn.tonn.cn/pubLic/_UNI__E93D809_1109151324_1731136611103_0.apk'; // 安装包下载地址\n            // 此处逻辑仅为示例，可自行编写\n            if (code > 0) {\n                // 腾讯云和阿里云下载链接不同，需要处理一下，阿里云会原样返回\n                const tcbRes = await uniCloud.getTempFileURL({ fileList: [url] });\n                if (typeof tcbRes.fileList[0].tempFileURL !== 'undefined')\n                    uniUpgradeCenterResult.url = tcbRes.fileList[0].tempFileURL;\n                /**\n                 * 提示升级一\n                 * 使用 uni.showModal\n                 */\n                // return updateUseModal(uniUpgradeCenterResult)\n                /**\n                 * 提示升级二\n                 * 官方适配的升级弹窗，可自行替换资源适配UI风格\n                 */\n                uni.setStorageSync(PACKAGE_INFO_KEY, uniUpgradeCenterResult);\n                uni.openDialogPage({\n                    url: `/uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup?local_storage_key=${PACKAGE_INFO_KEY}`,\n                    disableEscBack: true,\n                    fail: (err) => {\n                        console.error('更新弹框跳转失败', err);\n                        uni.removeStorageSync(PACKAGE_INFO_KEY);\n                    }\n                });\n                return resolve(uniUpgradeCenterResult);\n            }\n            else if (code < 0) {\n                console.error(message);\n                return reject(uniUpgradeCenterResult);\n            }\n            return resolve(uniUpgradeCenterResult);\n        }).catch((err) => {\n            reject(err);\n        });\n    });\n}\n/**\n * 使用 uni.showModal 升级\n */\nfunction updateUseModal(packageInfo: UniUpgradeCenterResult): void {\n    const { title, // 标题\n    contents, // 升级内容\n    is_mandatory, // 是否强制更新\n    url, // 安装包下载地址\n    type, platform } = packageInfo;\n    let isWGT = type === 'wgt';\n    let isiOS = !isWGT ? platform.includes(platform_iOS) : false;\n    let confirmText = '立即下载更新';\n    return uni.showModal({\n        title,\n        content: contents,\n        showCancel: !is_mandatory,\n        confirmText,\n        success: res => {\n            if (res.cancel)\n                return;\n            if (isiOS) {\n                // iOS 平台跳转 AppStore\n                openSchema(url);\n                return;\n            }\n            uni.showToast({\n                title: '后台下载中……',\n                duration: 1000\n            });\n            // wgt 和 安卓下载更新\n            uni.downloadFile({\n                url,\n                success: res => {\n                    if (res.statusCode !== 200) {\n                        console.error('下载安装包失败');\n                        return;\n                    }\n                    // 下载好直接安装，下次启动生效\n                    // uni-app x 项目没有 plus5+ 故使用条件编译\n                    uni.installApk({\n                        filePath: res.tempFilePath,\n                        success: () => {\n                            uni.showModal({\n                                title: '安装成功请手动重启'\n                            });\n                        },\n                        fail: err => {\n                            uni.showModal({\n                                title: '更新失败',\n                                content: err.errMsg,\n                                showCancel: false\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    });\n}\n//# sourceMappingURL=check-update.uts.map","import callCheckVersion, { UniUpgradeCenterResult } from \"./call-check-version\"\nimport { platform_iOS } from './utils'\n\nimport { openSchema } from '@/uni_modules/uts-openSchema'\n\n\n// 推荐再App.vue中使用\nconst PACKAGE_INFO_KEY = '__package_info__'\n\n\n\n\nexport default function () : Promise<UniUpgradeCenterResult> {\n\n\treturn new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n\t\tcallCheckVersion().then(async (uniUpgradeCenterResult) => {\n\t\t\t// NOTE uni-app x 3.96 解构有问题\n\t\t\tconst code = uniUpgradeCenterResult.code\n\t\t\tconst message = uniUpgradeCenterResult.message\n\t\t\tconst url = 'https://app-cdn.tonn.cn/pubLic/_UNI__E93D809_1109151324_1731136611103_0.apk' // 安装包下载地址\n        // 此处逻辑仅为示例，可自行编写\n        if (code > 0) {\n          // 腾讯云和阿里云下载链接不同，需要处理一下，阿里云会原样返回\n          const tcbRes = await uniCloud.getTempFileURL({ fileList: [url] });\n          if (typeof tcbRes.fileList[0].tempFileURL !== 'undefined') uniUpgradeCenterResult.url = tcbRes.fileList[0].tempFileURL;\n\n          /**\n           * 提示升级一\n           * 使用 uni.showModal\n           */\n          // return updateUseModal(uniUpgradeCenterResult)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          /**\n           * 提示升级二\n           * 官方适配的升级弹窗，可自行替换资源适配UI风格\n           */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          uni.setStorageSync(PACKAGE_INFO_KEY, uniUpgradeCenterResult)\n          uni.openDialogPage({\n            url: `/uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup?local_storage_key=${PACKAGE_INFO_KEY}`,\n            disableEscBack: true,\n            fail: (err) => {\n              console.error('更新弹框跳转失败', err)\n              uni.removeStorageSync(PACKAGE_INFO_KEY)\n            }\n          })\n\n\n          return resolve(uniUpgradeCenterResult)\n        } else if (code < 0) {\n          console.error(message)\n          return reject(uniUpgradeCenterResult)\n        }\n        return resolve(uniUpgradeCenterResult)\n      }).catch((err) => {\n        reject(err)\n      })\n    });\n  }\n\n/**\n * 使用 uni.showModal 升级\n */\nfunction updateUseModal(packageInfo : UniUpgradeCenterResult) : void {\n\n\tconst {\n\t\ttitle, // 标题\n\t\tcontents, // 升级内容\n\t\tis_mandatory, // 是否强制更新\n\t\turl, // 安装包下载地址\n\t\ttype,\n\t\tplatform\n\t} = packageInfo;\n\n\tlet isWGT = type === 'wgt'\n\tlet isiOS = !isWGT ? platform.includes(platform_iOS) : false;\n\n\n\n\n\n\tlet confirmText = '立即下载更新'\n\n\n    return uni.showModal({\n      title,\n      content: contents,\n      showCancel: !is_mandatory,\n      confirmText,\n      success: res => {\n        if (res.cancel) return;\n\n\t\t\tif (isiOS) {\n\t\t\t\t// iOS 平台跳转 AppStore\n\n\n\n\n\t\t\t\topenSchema(url)\n\n\t\t\t\treturn;\n\t\t\t}\n\n        uni.showToast({\n          title: '后台下载中……',\n          duration: 1000\n        });\n\n\t\t\t// wgt 和 安卓下载更新\n\t\t\tuni.downloadFile({\n\t\t\t\turl,\n\t\t\t\tsuccess: res => {\n\t\t\t\t\tif (res.statusCode !== 200) {\n\t\t\t\t\t\tconsole.error('下载安装包失败');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// 下载好直接安装，下次启动生效\n          // uni-app x 项目没有 plus5+ 故使用条件编译\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          uni.installApk({\n          \tfilePath: res.tempFilePath,\n          \tsuccess: () => {\n          \t\tuni.showModal({\n          \t\t\ttitle: '安装成功请手动重启'\n          \t\t});\n          \t},\n          \tfail: err => {\n          \t\tuni.showModal({\n          \t\t\ttitle: '更新失败',\n          \t\t\tcontent: err.errMsg,\n          \t\t\tshowCancel: false\n          \t\t});\n          \t}\n          });\n\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n}\n","<template>\n\t<view class=\"mask flex-center\">\n\t\t<view class=\"content\">\n\t\t\t<view class=\"content-top\">\n\t\t\t\t<text class=\"content-top-text\">{{title}}</text>\n\t\t\t\t<image class=\"content-top-image\" mode=\"widthFix\"\n\t\t\t\t\tsrc=\"/uni_modules/uni-upgrade-center-app/static/app/bg_top.png\"></image>\n\t\t\t</view>\n\n\t\t\t<view class=\"content-space\"></view>\n\n\t\t\t<view class=\"content-body\">\n\t\t\t\t<view class=\"content-body-title\">\n\t\t\t\t\t<text class=\"text title\">{{subTitle}}</text>\n\t\t\t\t\t<text class=\"text version\">v{{version}}</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"body\">\n\t\t\t\t\t<scroll-view class=\"box-des-scroll\" scroll-y=\"true\">\n\t\t\t\t\t\t<text class=\"text box-des\">\n\t\t\t\t\t\t\t{{contents}}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</scroll-view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"footer flex-center\">\n\t\t\t\t\t<template v-if=\"isiOS\">\n\t\t\t\t\t\t<button class=\"content-button\" style=\"border: none;color: #fff;\" plain @click=\"jumpToAppStore\">\n\t\t\t\t\t\t\t{{downLoadBtnTextiOS}}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t<template v-if=\"!downloadSuccess\">\n\t\t\t\t\t\t\t<view class=\"progress-box flex-column\" v-if=\"downloading\">\n\t\t\t\t\t\t\t\t<progress class=\"progress\" :percent=\"downLoadPercent\" activeColor=\"#3DA7FF\"\n\t\t\t\t\t\t\t\t\t:show-info=\"true\" :stroke-width=\"10\" />\n\t\t\t\t\t\t\t\t<view\n\t\t\t\t\t\t\t\t\tstyle=\"width:100%;display: flex;justify-content: space-around;flex-direction: row;\">\n\t\t\t\t\t\t\t\t\t<text class=\"text\" style=\"font-size: 14px;\">{{downLoadingText}}</text>\n\t\t\t\t\t\t\t\t\t<text class=\"text\"\n\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 14px;\">({{downloadedSize}}/{{packageFileSize}}M)</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t\t<button v-else class=\"content-button\" @click=\"updateApp\">\n\t\t\t\t\t\t\t\t{{downLoadBtnText}}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</template>\n\n\t\t\t\t\t\t<button v-else-if=\"downloadSuccess && !installed\" class=\"content-button\" :loading=\"installing\"\n\t\t\t\t\t\t\t:disabled=\"installing\" @click=\"installPackage\">\n\t\t\t\t\t\t\t{{installing ? '正在安装……' : '下载完成，立即安装'}}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button v-else-if=\"installed\" class=\"content-button\" @click=\"installPackage\">\n\t\t\t\t\t\t\t安装未完成，点击安装\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</template>\n\t\t\t\t</view>\n\t\t\t</view>\n\n\t\t\t<view class=\"content-bottom\">\n\t\t\t\t<image v-if=\"!is_mandatory\" class=\"close-img\" mode=\"widthFix\"\n\t\t\t\t\tsrc=\"/uni_modules/uni-upgrade-center-app/static/app/app_update_close.png\" @click=\"closeUpdate\">\n\t\t\t\t</image>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport { openSchema as utsOpenSchema } from '@/uni_modules/uts-openSchema'\n\timport { createNotificationProgress, cancelNotificationProgress, finishNotificationProgress } from '@/uni_modules/uts-progressNotification'\n\timport { type CreateNotificationProgressOptions, type FinishNotificationProgressOptions } from '@/uni_modules/uts-progressNotification/utssdk/interface.uts'\n\timport { UniUpgradeCenterResult, StoreListItem } from '../../utils/call-check-version'\n  \timport { platform_iOS, platform_Android } from '../../utils/utils'\n\tconst requiredKey = ['version', 'url', 'type']\n\tlet downloadTask : DownloadTask | null = null;\n\tlet openSchemePromise : Promise<boolean> | null = null;\n\n\tconst openSchema = (url : string) : Promise<boolean> => new Promise<boolean>((resolve, reject) => {\n\t\ttry {\n\t\t\tutsOpenSchema(url)\n\t\t\tresolve(true)\n\t\t} catch (e) {\n\t\t\treject(false)\n\t\t}\n\t})\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t// 从之前下载安装\n\t\t\t\tinstallForBeforeFilePath: '',\n\n\t\t\t\t// 安装\n\t\t\t\tinstalled: false,\n\t\t\t\tinstalling: false,\n\n\t\t\t\t// 下载\n\t\t\t\tdownloadSuccess: false,\n\t\t\t\tdownloading: false,\n\n\t\t\t\tdownLoadPercent: 0,\n\t\t\t\tdownloadedSize: 0,\n\t\t\t\tpackageFileSize: 0,\n\n\t\t\t\ttempFilePath: '', // 要安装的本地包地址\n\n\t\t\t\t// 默认安装包信息\n\t\t\t\ttitle: '更新日志',\n\t\t\t\tcontents: '',\n\t\t\t\tversion: '',\n\t\t\t\tis_mandatory: false,\n\t\t\t\turl: \"\",\n\t\t\t\tplatform: [] as string[],\n\t\t\t\tstore_list: null as StoreListItem[] | null,\n\n\t\t\t\t// 可自定义属性\n\t\t\t\tsubTitle: '发现新版本',\n\t\t\t\tdownLoadBtnTextiOS: '立即跳转更新',\n\t\t\t\tdownLoadBtnText: '立即下载更新',\n\t\t\t\tdownLoadingText: '安装包下载中，请稍后'\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tisiOS() : boolean {\n\t\t\t\treturn this.platform.includes(platform_iOS);\n\t\t\t},\n\t\t\tisAndroid() : boolean {\n\t\t\t\treturn this.platform.includes(platform_Android);\n\t\t\t},\n\t\t\tneedNotificationProgress() : boolean {\n\t\t\t\treturn this.isAndroid && !this.is_mandatory\n\t\t\t}\n\t\t},\n\t\tonUnload() {\n\t\t\tif (this.needNotificationProgress) {\n\t\t\t\tcancelNotificationProgress()\n\t\t\t}\n\t\t},\n\t\tonLoad(onLoadOptions: OnLoadOptions) {\n\t\t\tconst local_storage_key: string | null = onLoadOptions['local_storage_key']\n\t\t\tif (local_storage_key == null) {\n\t\t\t\tconsole.error('local_storage_key为空，请检查后重试')\n\t\t\t\tthis.closePopup()\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\tconst localPackageInfo = uni.getStorageSync(local_storage_key);\n\t\t\tif (localPackageInfo == null) {\n\t\t\t\tconsole.error('安装包信息为空，请检查后重试')\n\t\t\t\tthis.closePopup()\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\tthis.show(JSON.parse<UniUpgradeCenterResult>(JSON.stringify(localPackageInfo)) as UniUpgradeCenterResult)\n\t\t},\n\t\tonBackPress(options : OnBackPressOptions) : boolean | null {\n\t\t\tif (this.is_mandatory) return true\n\t\t\tif (!this.needNotificationProgress) {\n\t\t\t\tif (downloadTask !== null) {\n\t\t\t\t\tdownloadTask!.abort()\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\tmethods: {\n\t\t\tjumpToAppStore() {\n\t\t\t\topenSchema(this.url)\n\t\t\t},\n\t\t\tshow(localPackageInfo : UniUpgradeCenterResult | null) {\n\t\t\t\tif (localPackageInfo === null) return;\n\n\t\t\t\tfor (let key in localPackageInfo) {\n\t\t\t\t\tif (requiredKey.indexOf(key) != -1 && localPackageInfo[key] === null) {\n\t\t\t\t\t\tconsole.error(`参数 ${key} 必填，请检查后重试`)\n\t\t\t\t\t\tthis.closePopup()\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.title = localPackageInfo.title\n\t\t\t\tthis.url = localPackageInfo.url\n\t\t\t\tthis.contents = localPackageInfo.contents\n\t\t\t\tthis.is_mandatory = localPackageInfo.is_mandatory\n\t\t\t\tthis.platform = localPackageInfo.platform\n\t\t\t\tthis.version = localPackageInfo.version\n\t\t\t\tthis.store_list = localPackageInfo.store_list\n\t\t\t},\n\t\t\taskAbortDownload() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '是否取消下载？',\n\t\t\t\t\tcancelText: '否',\n\t\t\t\t\tconfirmText: '是',\n\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tif (downloadTask !== null) downloadTask!.abort()\n\t\t\t\t\t\t\tthis.closePopup()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tcloseUpdate() {\n\t\t\t\tif (this.downloading && !this.needNotificationProgress) {\n\t\t\t\t\tthis.askAbortDownload()\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.closePopup()\n\t\t\t},\n\t\t\tclosePopup() {\n\t\t\t\tthis.downloadSuccess = false\n\t\t\t\tthis.downloading = false\n\t\t\t\tthis.downLoadPercent = 0\n\t\t\t\tthis.downloadedSize = 0\n\t\t\t\tthis.packageFileSize = 0\n\t\t\t\tthis.tempFilePath = ''\n\n\t\t\t\tthis.installing = false\n\t\t\t\tthis.installed = false\n\n\t\t\t\tuni.closeDialogPage({\n\t\t\t\t\tdialogPage: this.$page\n\t\t\t\t})\n\t\t\t},\n\t\t\tupdateApp() {\n\t\t\t\tconst checkStoreScheme = this.checkStoreScheme()\n\t\t\t\tif (checkStoreScheme !== null) {\n\t\t\t\t\tcheckStoreScheme\n\t\t\t\t\t\t.then(_ => { })\n\t\t\t\t\t\t.catch(() => { this.downloadPackage() })\n\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\topenSchemePromise = null\n\t\t\t\t\t\t})\n\t\t\t\t} else { this.downloadPackage() }\n\t\t\t},\n\t\t\t// 跳转应用商店\n\t\t\tcheckStoreScheme() : Promise<boolean> | null {\n\t\t\t\tif (this.store_list !== null) {\n\t\t\t\t\tconst storeList : StoreListItem[] = this.store_list!.filter((item : StoreListItem) : boolean => item.enable)\n\t\t\t\t\tif (storeList.length > 0) {\n\t\t\t\t\t\tif (openSchemePromise === null) {\n\t\t\t\t\t\t\topenSchemePromise = Promise.reject() as Promise<boolean>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstoreList\n\t\t\t\t\t\t\t.sort((cur : StoreListItem, next : StoreListItem) : number => next.priority - cur.priority)\n\t\t\t\t\t\t\t.map((item : StoreListItem) : string => item.scheme)\n\t\t\t\t\t\t\t.reduce((promise : Promise<boolean>, cur : string) : Promise<boolean> => {\n\t\t\t\t\t\t\t\topenSchemePromise = promise.catch<boolean>(() : Promise<boolean> => openSchema(cur))\n\t\t\t\t\t\t\t\treturn openSchemePromise!\n\t\t\t\t\t\t\t}, openSchemePromise!)\n\t\t\t\t\t\treturn openSchemePromise!\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tdownloadPackage() {\n\t\t\t\t//下载包\n\t\t\t\tdownloadTask = uni.downloadFile({\n\t\t\t\t\turl: this.url,\n\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\tif (res.statusCode == 200) {\n\t\t\t\t\t\t\tthis.tempFilePath = res.tempFilePath\n\t\t\t\t\t\t\tthis.downLoadComplete()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfail: err => {\n\t\t\t\t\t\tconsole.log('downloadFile err: ', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (downloadTask !== null) {\n\t\t\t\t\tthis.downloading = true;\n\t\t\t\t\tif (this.needNotificationProgress) {\n\t\t\t\t\t\tthis.closePopup()\n\t\t\t\t\t}\n\t\t\t\t\tdownloadTask!.onProgressUpdate(res => {\n\t\t\t\t\t\tthis.downLoadPercent = parseFloat(res.progress.toFixed(0));\n\t\t\t\t\t\tthis.downloadedSize = parseFloat((res.totalBytesWritten / Math.pow(1024, 2)).toFixed(2));\n\t\t\t\t\t\tthis.packageFileSize = parseFloat((res.totalBytesExpectedToWrite / Math.pow(1024, 2)).toFixed(2));\n\n\t\t\t\t\t\tif (this.needNotificationProgress) {\n\t\t\t\t\t\t\tcreateNotificationProgress({\n\t\t\t\t\t\t\t\ttitle: \"升级中心正在下载安装包……\",\n\t\t\t\t\t\t\t\tcontent: `${this.downLoadPercent}%`,\n\t\t\t\t\t\t\t\tprogress: this.downLoadPercent,\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tif (!this.downloadSuccess) {\n\t\t\t\t\t\t\t\t\t\tthis.askAbortDownload()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} as CreateNotificationProgressOptions)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdownLoadComplete() {\n\t\t\t\tthis.downloadSuccess = true;\n\t\t\t\tthis.downloading = false;\n\n\t\t\t\tthis.downLoadPercent = 0\n\t\t\t\tthis.downloadedSize = 0\n\t\t\t\tthis.packageFileSize = 0\n\n\t\t\t\tdownloadTask = null;\n\n\t\t\t\tif (this.needNotificationProgress) {\n\t\t\t\t\tfinishNotificationProgress({\n\t\t\t\t\t\ttitle: \"安装升级包\",\n\t\t\t\t\t\tcontent: \"下载完成\",\n\t\t\t\t\t\tonClick() { }\n\t\t\t\t\t} as FinishNotificationProgressOptions)\n\n\t\t\t\t\tthis.installPackage();\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// 强制更新，直接安装\n\t\t\t\tif (this.is_mandatory) {\n\t\t\t\t\tthis.installPackage();\n\t\t\t\t}\n\t\t\t},\n\t\t\tinstallPackage() {\n\t\t\t\tthis.installing = true;\n\n\t\t\t\tuni.installApk({\n\t\t\t\t\tfilePath: this.tempFilePath,\n\t\t\t\t\tsuccess: _ => {\n\t\t\t\t\t\tthis.installing = false;\n\t\t\t\t\t\tthis.installed = true;\n\t\t\t\t\t},\n\t\t\t\t\tfail: err => {\n\t\t\t\t\t\tconsole.error('installApk fail', err);\n\t\t\t\t\t\t// 安装失败需要重新下载安装包\n\t\t\t\t\t\tthis.installing = false;\n\t\t\t\t\t\tthis.installed = false;\n\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '更新失败，请重新下载',\n\t\t\t\t\t\t\tcontent: `uni.installApk 错误码 ${err.errCode}`,\n\t\t\t\t\t\t\tshowCancel: false\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// 安装跳出覆盖安装，此处直接返回上一页\n\t\t\t\tif (!this.is_mandatory) {\n\t\t\t\t\tuni.navigateBack()\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.flex-center {\n\n\n\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.mask {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(0, 0, 0, .65);\n\t}\n\n\t.content {\n\t\tposition: relative;\n\t\ttop: 0;\n\t\twidth: 600rpx;\n\t\tbackground-color: transparent;\n\t}\n\n\t.text {\n\t\tfont-family: Source Han Sans CN;\n\t}\n\n\t.content-top {\n\t\twidth: 100%;\n\t\tborder-bottom-color: #fff;\n\t\tborder-bottom-width: 15px;\n\t\tborder-bottom-style: solid;\n\t}\n\n\t.content-space {\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tbackground-color: #fff;\n\t\tposition: absolute;\n\t\ttop: 140px;\n\t\tz-index: -1;\n\t}\n\n\t.content-top-image {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tbottom: -18px;\n\t}\n\n\t.content-top-text {\n\t\tfont-size: 22px;\n\t\tfont-weight: bold;\n\t\tcolor: #F8F8FA;\n\t\tposition: absolute;\n\t\twidth: 65%;\n\t\ttop: 77.5px;\n\t\tleft: 25px;\n\t\tz-index: 1;\n\t}\n\n\t.content-body {\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 25px;\n\t\twidth: 100%;\n\t\tbackground-color: #fff;\n\t\tborder-bottom-left-radius: 15px;\n\t\tborder-bottom-right-radius: 15px;\n\t}\n\n\t.content-body-title {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\n\t.content-body-title .version {\n\t\tpadding-left: 10px;\n\t\tcolor: #fff;\n\t\tfont-size: 10px;\n\t\tmargin-left: 5px;\n\t\tpadding: 2px 4px;\n\t\tborder-radius: 10px;\n\t\tbackground: #50aefd;\n\t}\n\n\t.title {\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tcolor: #3DA7FF;\n\t\tline-height: 38px;\n\t}\n\n\t.footer {\n\t\theight: 75px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t}\n\n\t.box-des-scroll {\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 15px;\n\t\theight: 100px;\n\t}\n\n\t.box-des {\n\t\tfont-size: 13px;\n\t\tcolor: #000000;\n\t\tline-height: 25px;\n\t}\n\n\t.progress-box {\n\t\twidth: 100%;\n\t}\n\n\t.progress {\n\t\twidth: 90%;\n\t\theight: 20px;\n\t}\n\n\t.content-bottom {\n\t\theight: 75px;\n\t}\n\n\t.close-img {\n\t\twidth: 35px;\n\t\theight: 35px;\n\t\tz-index: 1000;\n\t\tposition: relative;\n\t\tbottom: -25px;\n\t\tleft: 132px;\n\t}\n\n\t.content-button {\n\t\twidth: 100%;\n\t\theight: 40px;\n\t\tline-height: 40px;\n\n\t\tfont-size: 15px;\n\t\tfont-weight: 400;\n\t\tborder-radius: 20px;\n\t\tborder: none;\n\t\tcolor: #fff;\n\n\t\ttext-align: center;\n\n\t\tbackground-color: #1785ff;\n\t}\n\n\t.flex-column {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n</style>","export const platform_iOS: string = 'iOS';\nexport const platform_Android: string = 'Android';\nexport const platform_Harmony: string = 'Harmony';\n/**\n * 对比版本号，如需要，请自行修改判断规则\n * 支持比对\t(\"3.0.0.0.0.1.0.1\", \"3.0.0.0.0.1\")\t(\"3.0.0.1\", \"3.0\")\t(\"3.1.1\", \"3.1.1.1\") 之类的\n * @param {Object} v1\n * @param {Object} v2\n * v1 > v2 return 1\n * v1 < v2 return -1\n * v1 == v2 return 0\n */\nexport function compare(v_1: string = '0', v_2: string = '0'): number {\n    const v1: string[] = String(v_1).split('.');\n    const v2: string[] = String(v_2).split('.');\n    const minVersionLens = Math.min(v1.length, v2.length);\n    let result = 0;\n    for (let i = 0; i < minVersionLens; i++) {\n        const curV1 = Number(v1[i]);\n        const curV2 = Number(v2[i]);\n        if (curV1 > curV2) {\n            result = 1;\n            break;\n        }\n        else if (curV1 < curV2) {\n            result = -1;\n            break;\n        }\n    }\n    if (result === 0 && v1.length !== v2.length) {\n        const v1BiggerThenv2 = v1.length > v2.length;\n        const maxLensVersion = v1BiggerThenv2 ? v1 : v2;\n        for (let i = minVersionLens; i < maxLensVersion.length; i++) {\n            const curVersion = Number(maxLensVersion[i]);\n            if (curVersion > 0) {\n                v1BiggerThenv2 ? (result = 1) : (result = -1);\n                break;\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=utils.uts.map","export const platform_iOS: string = 'iOS';\nexport const platform_Android: string = 'Android';\nexport const platform_Harmony: string = 'Harmony';\n\n/**\n * 对比版本号，如需要，请自行修改判断规则\n * 支持比对\t(\"3.0.0.0.0.1.0.1\", \"3.0.0.0.0.1\")\t(\"3.0.0.1\", \"3.0\")\t(\"3.1.1\", \"3.1.1.1\") 之类的\n * @param {Object} v1\n * @param {Object} v2\n * v1 > v2 return 1\n * v1 < v2 return -1\n * v1 == v2 return 0\n */\nexport function compare(v_1: string = '0', v_2: string = '0') {\n\tconst v1: string[] = String(v_1).split('.');\n\tconst v2: string[] = String(v_2).split('.');\n\tconst minVersionLens = Math.min(v1.length, v2.length);\n\n\tlet result = 0;\n\tfor (let i = 0; i < minVersionLens; i++) {\n\t\tconst curV1 = Number(v1[i]);\n\t\tconst curV2 = Number(v2[i]);\n\n\t\tif (curV1 > curV2) {\n\t\t\tresult = 1;\n\t\t\tbreak;\n\t\t} else if (curV1 < curV2) {\n\t\t\tresult = -1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (result === 0 && v1.length !== v2.length) {\n\t\tconst v1BiggerThenv2 = v1.length > v2.length;\n\t\tconst maxLensVersion = v1BiggerThenv2 ? v1 : v2;\n\t\tfor (let i = minVersionLens; i < maxLensVersion.length; i++) {\n\t\t\tconst curVersion = Number(maxLensVersion[i]);\n\t\t\tif (curVersion > 0) {\n\t\t\t\tv1BiggerThenv2 ? (result = 1) : (result = -1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}","<template>\n  <view>\n    <image class=\"logo\" src=\"/static/logo.png\"></image>\n    <view class=\"text-area\">\n      <text class=\"title\">{{title}}</text>\n    </view>\n    <button @click=\"error\">error</button>\n    <button @click=\"openSchemaError\">openSchemaError</button>\n    <navigator url=\"/pages/C/C\">\n      <button>C</button>\n    </navigator>\n    <view style=\"padding: 30rpx 0;\">扫描结果：{{result}}</view>\n    <button type=\"primary\" @click=\"scan\">开启扫描</button>\n    {{modelValue}}\n    <!-- <input type=\"digit\" v-model=\"modelValue\"/> -->\n    <!-- <input type=\"number\" v-model=\"modelValue\"/> -->\n    <button @click=\"checkUpdate\">升级中心</button>\n    <button @click=\"test\">test</button>\n\n\n\n    <button @click=\"getAppBaseInfo\">getAppBaseInfo</button>\n  </view>\n</template>\n\n<script>\n  // import { scanCode, ScanCodeSuccessCallbackResult, ScanCodeOption } from '@/uni_modules/lime-scan';\n\n  import checkUpdate from \"@/uni_modules/uni-upgrade-center-app/utils/check-update\"\n  import { UniUpgradeCenterResult } from \"@/uni_modules/uni-upgrade-center-app/utils/call-check-version\"\n  import { openSchema } from '@/uni_modules/uts-openSchema'\n\n\n  const themeChange = (res: OnHostThemeChangeCallbackResult) => {\n    console.log('res: ', res);\n  }\n\n  export default {\n    data() {\n      return {\n        title: 'Hello',\n        type: '',\n        result: '',\n        modelValue: 0,\n        themeId: -1,\n      }\n    },\n    onLoad(_ : OnLoadOptions) {\n      const info = uni.getSystemInfoSync()\n      console.log(info)\n      this.themeId = uni.onHostThemeChange(themeChange)\n\n      uni.setAppTheme({\n        theme: \"auto\"\n      })\n\n\n\n\n    },\n    methods: {\n      openSchemaError() {\n        openSchema('12312312')\n      },\n      error() {\n        setTimeout(() => {\n          throw new Error('setTimeout ABC')\n        }, 1000)\n        throw new Error('ABC')\n      },\n      getAppBaseInfo() {\n        console.log(uni.getAppBaseInfo())\n      },\n      offHostThemeChange() {\n\n\n\n      },\n      test() {\n\n\n\n\n\n      },\n      update() {\n\n        const info : UniUpgradeCenterResult = {\n          _id: '',\n          message: '',\n          code: 0,\n          min_uni_version: '',\n          \"is_silently\": false,\n          \"is_mandatory\": false,\n          \"appid\": \"__UNI__HelloUniAppX\",\n          \"name\": \"Hello uni-app x\",\n          \"title\": \"1.6.3更新\",\n          \"contents\": \"1. 使用HBuilderX4.31版本编译\\n2. 新增ad、map、native-view等组件示例\\n3. 新增隐私政策页面示例\\n4. 优化其它示例用户体验\",\n          \"platform\": [\n            \"Android\"\n          ],\n          \"version\": \"1.6.3\",\n          \"url\": \"https://web-ext-storage.dcloud.net.cn/uni-app-x/pkg/hello-uniappx.apk\",\n          \"stable_publish\": true,\n          \"type\": \"native_app\",\n          \"store_list\": [],\n          \"uni_platform\": \"android\",\n          \"create_env\": \"upgrade-center\",\n          \"create_date\": 1729853731640\n        }\n\n        uni.setStorageSync('PACK_INFO', info)\n        uni.openDialogPage({\n          url: `/uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup?local_storage_key=PACK_INFO`,\n          disableEscBack: true,\n          fail: (err) => {\n            console.error('更新弹框跳转失败', err)\n            uni.removeStorageSync('PACK_INFO')\n          }\n        })\n\n\n      },\n      checkUpdate() {\n\n        checkUpdate().then(res => {\n          console.log('res: ', res);\n        }).catch(e => {\n          console.log('e: ', e);\n        })\n        /* const key = 'ABC'\n        uni.setStorageSync(key, info)\n        uni.openDialogPage({\n          url: `/uni_modules/uni-upgrade-center-app/pages/uni-app-x/popup?local_storage_key=${key}`,\n          disableEscBack: true\n        }) */\n\n\n      },\n      scan() {\n        /* scanCode({\n          success: (res : ScanCodeSuccessCallbackResult) => {\n            this.result = res.result\n            console.log('res', res.scanType)\n          }\n        } as ScanCodeOption) */\n      }\n    }\n  }\n</script>\n\n<style>\n  .logo {\n    height: 100px;\n    width: 100px;\n    margin: 100px auto 25px auto;\n  }\n\n  .title {\n    font-size: 18px;\n    color: #8f8f94;\n    text-align: center;\n  }\n</style>","import App from './App.uvue'\r\n\r\nimport { createSSRApp } from 'vue'\r\nexport function createApp() {\r\n\tconst app = createSSRApp(App)\r\n\treturn {\r\n\t\tapp\r\n\t}\r\n}\nexport function main(app: IApp) {\n    definePageRoutes();\n    defineAppConfig();\n    (createApp()['app'] as VueApp).mount(app, GenUniApp());\n}\n\nexport class UniAppConfig extends io.dcloud.uniapp.appframe.AppConfig {\n    override name: string = \"uts-test\"\n    override appid: string = \"__UNI__ADA0E20\"\n    override versionName: string = \"1.0.0\"\n    override versionCode: string = \"100\"\n    override uniCompilerVersion: string = \"4.71\"\n    \n    constructor() { super() }\n}\n\nimport GenPagesIndexIndexClass from './pages/index/index.uvue'\nimport GenPagesBBClass from './pages/B/B.uvue'\nimport GenPagesCCClass from './pages/C/C.uvue'\nimport GenUniModulesUniUpgradeCenterAppPagesUniAppXUpgradePopupClass from './uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup.uvue'\nfunction definePageRoutes() {\n__uniRoutes.push({ path: \"pages/index/index\", component: GenPagesIndexIndexClass, meta: { isQuit: true } as UniPageMeta, style: _uM([[\"navigationBarTitleText\",\"uni-app x\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/B/B\", component: GenPagesBBClass, meta: { isQuit: false } as UniPageMeta, style: _uM([[\"navigationBarTitleText\",\"B\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/C/C\", component: GenPagesCCClass, meta: { isQuit: false } as UniPageMeta, style: _uM([[\"navigationBarTitleText\",\"\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup\", component: GenUniModulesUniUpgradeCenterAppPagesUniAppXUpgradePopupClass, meta: { isQuit: false } as UniPageMeta, style: _uM([[\"navigationBarTitleText\",\"\"]]) } as UniPageRoute)\n}\nconst __uniTabBar: Map<string, any | null> | null = _uM([[\"backgroundColor\",\"@tabBarBackgroundColor\"],[\"list\",[_uM([[\"text\",\"首页\"],[\"pagePath\",\"pages/index/index\"]]),_uM([[\"text\",\"首页\"],[\"pagePath\",\"pages/B/B\"]])]]])\nconst __uniLaunchPage: Map<string, any | null> = _uM([[\"url\",\"pages/index/index\"],[\"style\",_uM([[\"navigationBarTitleText\",\"uni-app x\"]])]])\nfunction defineAppConfig(){\n  __uniConfig.entryPagePath = '/pages/index/index'\n  __uniConfig.globalStyle = _uM([[\"pageOrientation\",\"portrait\"],[\"navigationBarTitleText\",\"Hello uniapp x\"],[\"navigationBarTextStyle\",\"@navigationBarTextStyle\"],[\"navigationBarBackgroundColor\",\"@navigationBarBackgroundColor\"],[\"backgroundColorContent\",\"@backgroundColorContent\"],[\"backgroundColor\",\"@backgroundColor\"],[\"backgroundTextStyle\",\"@backgroundTextStyle\"]])\n  __uniConfig.getTabBarConfig = ():Map<string, any> | null =>  _uM([[\"backgroundColor\",\"@tabBarBackgroundColor\"],[\"list\",[_uM([[\"text\",\"首页\"],[\"pagePath\",\"pages/index/index\"]]),_uM([[\"text\",\"首页\"],[\"pagePath\",\"pages/B/B\"]])]]])\n  __uniConfig.tabBar = __uniConfig.getTabBarConfig()\n  __uniConfig.conditionUrl = ''\n  __uniConfig.uniIdRouter = _uM()\n  __uniConfig.themeConfig = _uM([[\"light\",_uM([[\"navigationBarTextStyle\",\"white\"],[\"navigationBarBackgroundColor\",\"#007AFF\"],[\"backgroundColorContent\",\"#efeff4\"],[\"backgroundColor\",\"#efeff4\"],[\"backgroundTextStyle\",\"dark\"],[\"tabBarColor\",\"#7A7E83\"],[\"tabBarSelectedColor\",\"#007AFF\"],[\"tabBarBorderStyle\",\"black\"],[\"tabBarBackgroundColor\",\"#F8F8F8\"],[\"tabBarComponentIconPath\",\"static/component.png\"],[\"tabBarComponentSelectedIconPath\",\"static/componentHL.png\"],[\"tabBarAPIIconPath\",\"static/api.png\"],[\"tabBarAPISelectedIconPath\",\"static/apiHL.png\"],[\"tabBarCSSIconPath\",\"static/css.png\"],[\"tabBarCSSSelectedIconPath\",\"static/cssHL.png\"],[\"tabBarTemplateIconPath\",\"static/template.png\"],[\"tabBarTemplateSelectedIconPath\",\"static/templateHL.png\"]])],[\"dark\",_uM([[\"navigationBarTextStyle\",\"white\"],[\"navigationBarBackgroundColor\",\"#1F1F1F\"],[\"backgroundColor\",\"#1F1F1F\"],[\"backgroundColorContent\",\"#646464\"],[\"backgroundTextStyle\",\"light\"],[\"tabBarColor\",\"#cacaca\"],[\"tabBarSelectedColor\",\"#007AFF\"],[\"tabBarBorderStyle\",\"white\"],[\"tabBarBackgroundColor\",\"#1F1F1F\"],[\"tabBarComponentIconPath\",\"static/component.png\"],[\"tabBarComponentSelectedIconPath\",\"static/componentHL.png\"],[\"tabBarAPIIconPath\",\"static/api.png\"],[\"tabBarAPISelectedIconPath\",\"static/apiHL.png\"],[\"tabBarCSSIconPath\",\"static/css.png\"],[\"tabBarCSSSelectedIconPath\",\"static/cssHL.png\"],[\"tabBarTemplateIconPath\",\"static/template.png\"],[\"tabBarTemplateSelectedIconPath\",\"static/templateHL.png\"]])]])\n  __uniConfig.ready = true\n}\n","export type OpenSchema = (url : string) => void\r\nexport type CanOpenURL = (url : string) => boolean\r\n"],"names":[],"mappings":"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"}