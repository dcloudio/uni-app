// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`defineEmits basic usage 1`] = `
"export default defineComponent({
  emits: ['foo', 'bar'],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

function myEmit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}

return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ runtime options 1`] = `
"export default defineComponent({
  emits: ['a', 'b'],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}

return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (exported interface) 1`] = `
"export interface Emits { (e: 'foo' | 'bar'): void }
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (exported type alias) 1`] = `
"export type Emits = { (e: 'foo' | 'bar'): void }
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (interface ts type) 1`] = `
"interface Emits { (e: 'foo'): void }
    
export default defineComponent({
  emits: ['foo'],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (interface w/ extends) 1`] = `
"interface Base { (e: 'foo'): void }
    interface Emits extends Base { (e: 'bar'): void }
    
export default defineComponent({
  emits: ["bar", "foo"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (interface) 1`] = `
"interface Emits { (e: 'foo' | 'bar'): void }
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (property syntax string literal) 1`] = `
"export default defineComponent({
  emits: ["foo:bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (property syntax) 1`] = `
"export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (referenced exported function type) 1`] = `
"export type Emits = (e: 'foo' | 'bar') => void
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (referenced function type) 1`] = `
"type Emits = (e: 'foo' | 'bar') => void
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (type alias) 1`] = `
"type Emits = { (e: 'foo' | 'bar'): void }
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (type literal w/ call signatures) 1`] = `
"export default defineComponent({
  emits: ["foo", "bar", "baz"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (type references in union) 1`] = `
"type BaseEmit = "change"
    type Emit = "some" | "emit" | BaseEmit
    
export default defineComponent({
  emits: ["some", "emit", "change", "another"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type (union) 1`] = `
"export default defineComponent({
  emits: ["foo", "bar", "baz"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type 1`] = `
"export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;

exports[`defineEmits w/ type from normal script 1`] = `
"export interface Emits { (e: 'foo' | 'bar'): void }
    
export default defineComponent({
  emits: ["foo", "bar"],
  setup(__props) {
const __ins = getCurrentInstance()!;
const _ctx = __ins.proxy;
const _cache = __ins.renderCache;

    function emit(event: string, ...do_not_transform_spread: Array<any | null>) {
__ins.emit(event, ...do_not_transform_spread)
}
    
return (): any | null => { return null }
}

})"
`;
